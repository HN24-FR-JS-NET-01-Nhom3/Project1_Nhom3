@model LotteryChecker.Common.Models.Http.Data<LotteryChecker.Common.Models.ViewModels.UserVm>

@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var pageStart = (Model.Meta.Page - 1) * Model.Meta.PageSize + 1;
    var pageEnd = Model.Meta.Page * Model.Meta.PageSize;
    var prevPage = Model.Meta.Page - 1;
    var nextPage = Model.Meta.Page + 1;
    
    var messages = (TempData["Messages"] ?? "").ToString();
    var errors = (TempData["Errors"] ?? "").ToString();
}

@if (!string.IsNullOrEmpty(messages))
{
    @await Html.PartialAsync("MessagePopup", messages)
}
@if (!string.IsNullOrEmpty(errors))
{
    @await Html.PartialAsync("MessagePopup", errors)
}

<h1>Quản lý người dùng</h1>

<p class="mt-4">
    <a class="btn btn-outline-primary" asp-action="Create">Thêm mới</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>Họ và tên</th>
        <th>Username</th>
        <th>Email</th>
        <th>Điện thoại</th>
        <th>Role</th>
        <th>Last Login</th>
        <th>Active</th>
        <th class="text-center">Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Result)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastLogin)
            </td>
            <td>
                @* @Html.DisplayFor(modelItem => item.IsActive) *@
                <div class="form-check form-switch">
                    <form asp-area="Admin" asp-controller="User" asp-action="ChangeStatusUser" asp-route-id="@item.Id" asp-route-isActive="@item.IsActive" method="post">
                        <input class="form-check-input" type="checkbox" style="cursor:pointer;" checked="@item.IsActive" onchange="this.form.submit()">
                    </form>
                </div>
            </td>
            <td class="justify-content-evenly d-flex">
                <a class="btn btn-outline-success" asp-action="Edit" methods="get" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-outline-info" asp-action="Detail" methods="get" asp-route-id="@item.Id">Detail</a>
                @* <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a> *@
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="mt-5 d-flex justify-content-between">
    <h6>Showing page @Model.Meta.Page, &nbsp;from &nbsp;@pageStart &nbsp;to &nbsp;@pageEnd</h6>
    <div class="d-flex gap-2 buttons-change-page">
        @{
            if (Model.Meta.Page == 1)
            {
                <a class="disabled btn btn-outline-info fs-5" asp-area="Admin" asp-controller="User" asp-action="Index" asp-route-page="@prevPage" asp-route-pageSize="@Model.Meta.PageSize">&lt;</a>
            }
            else
            {
                <a class="btn btn-outline-info fs-5" asp-area="Admin" asp-controller="User" asp-action="Index" asp-route-page="@prevPage" asp-route-pageSize="@Model.Meta.PageSize">&lt;</a>
            }

            if (Model.Meta.Page >= Model.Meta.TotalPages)
            {
                <a class="disabled btn btn-outline-info fs-5" asp-area="Admin" asp-controller="User" asp-action="Index" asp-route-page="@nextPage" asp-route-pageSize="@Model.Meta.PageSize">&gt;</a>
            }
            else
            {
                <a class="btn btn-outline-info fs-5" asp-area="Admin" asp-controller="User" asp-action="Index" asp-route-page="@nextPage" asp-route-pageSize="@Model.Meta.PageSize">&gt;</a>
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
            $(function () {
                var errorMessage = '@Html.Raw(errors)';
                var message = '@Html.Raw(messages)';
                
                if (errorMessage.length > 0) {
                    $('#errorMessageModal').modal('show');
                    setTimeout(function(){
                        $('#errorMessageModal').modal('hide');
                    }, 2000);
                }
                
                if (message.length > 0) {
                    $('#messageModal').modal('show');
                    setTimeout(function(){
                        $('#messageModal').modal('hide');
                    }, 2000);
                }
            });
        </script>
}
