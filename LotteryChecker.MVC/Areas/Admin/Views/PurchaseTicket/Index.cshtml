@* @model IEnumerable<LotteryChecker.Common.Models.Entities.LotteryVm> *@
@model LotteryChecker.Common.Models.Http.Data<LotteryChecker.Common.Models.Entities.PurchaseTicketVm>
@using static LotteryChecker.MVC.Utils.DateTimeHelper


@{
    ViewData["Title"] = "Quản lý vé mua";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var pageStart = (Model.Meta.Page - 1) * Model.Meta.PageSize + 1;
    var pageEnd = Model.Meta.Page * Model.Meta.PageSize;
    var prevPage = Model.Meta.Page - 1;
    var nextPage = Model.Meta.Page + 1;

    var messages = (TempData["Messages"] ?? "").ToString();
    var errors = (TempData["Errors"] ?? "").ToString();
}
@if (!string.IsNullOrEmpty(messages))
{
    @await Html.PartialAsync("MessagePopup", messages)
}
@if (!string.IsNullOrEmpty(errors))
{
    @await Html.PartialAsync("MessagePopup", errors)
}

<h1>Quản lý vé mua</h1>

<p class="mt-4">
@*     <a class="btn btn-outline-primary" asp-action="Create">Thêm mới</a> *@
</p>

<table class="table">
    <thead>

        <tr>
            <th>Id người dùng</th>
            <th>Số vé</th>
            <th>Ngày quay thưởng</th>
            <th>Ngày mua vé</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Result)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LotteryNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DrawDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseDate)
                </td>

                <td class="justify-content-evenly d-flex">
                    <a class="btn btn-outline-success" asp-action="Edit" asp-route-Id="@item.PurchaseTicketId">Update</a>
                    <a class="btn btn-outline-info" asp-action="Detail" asp-route-Id="@item.PurchaseTicketId">Detail</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="mt-5 d-flex justify-content-between">
    <h6>Showing page @Model.Meta.Page, &nbsp;from &nbsp;@pageStart &nbsp;to &nbsp;@pageEnd</h6>
    <div class="d-flex gap-2 buttons-change-page">
        @{
            if (Model.Meta.Page == 1)
            {
                <a class="disabled btn btn-outline-info fs-5" asp-area="Admin" asp-controller="PurchaseTicket" asp-action="Index" asp-route-page="@prevPage" asp-route-pageSize="@Model.Meta.PageSize">&lt;</a>
            }
            else
            {
                <a class="btn btn-outline-info fs-5" asp-area="Admin" asp-controller="PurchaseTicket" asp-action="Index" asp-route-page="@prevPage" asp-route-pageSize="@Model.Meta.PageSize">&lt;</a>
            }

            if (Model.Meta.Page >= Model.Meta.TotalPages)
            {
                <a class="disabled btn btn-outline-info fs-5" asp-area="Admin" asp-controller="PurchaseTicket" asp-action="Index" asp-route-page="@nextPage" asp-route-pageSize="@Model.Meta.PageSize">&gt;</a>
            }
            else
            {
                <a class="btn btn-outline-info fs-5" asp-area="Admin" asp-controller="PurchaseTicket" asp-action="Index" asp-route-page="@nextPage" asp-route-pageSize="@Model.Meta.PageSize">&gt;</a>
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
        $(function () {
            var errorMessage = '@Html.Raw(errors)';
            var message = '@Html.Raw(messages)';

            if (errorMessage.length > 0) {
                $('#errorMessageModal').modal('show');
                setTimeout(function () {
                    $('#errorMessageModal').modal('hide');
                }, 2000);
            }

            if (message.length > 0) {
                $('#messageModal').modal('show');
                setTimeout(function () {
                    $('#messageModal').modal('hide');
                }, 2000);
            }
        });
    </script>
}